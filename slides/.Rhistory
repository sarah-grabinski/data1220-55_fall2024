lapply(sample_sizes, function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / n_samples,
.by = 'by_chappell') |>
pivot_wider(names_from = by_chappell, values_from = c('count', 'proportion'))
}) |>
bind_rows(.id = 'sample')
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = by_chappell, values_from = c('count', 'proportion'))
lapply(sample_sizes, function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = by_chappell, values_from = c('count', 'proportion'))
}) |>
bind_rows(.id = 'sample')
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = by_chappell, values_from = c('count', 'proportion')) |>
mutate(across(where(is.na), 0))
lapply(sample_sizes, function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = by_chappell, values_from = c('count', 'proportion')) |>
mutate(across(where(is.na), 0))
}) |>
bind_rows(.id = 'sample')
lapply(sample_sizes, function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = by_chappell, values_from = c('count', 'proportion'))
}) |>
bind_rows(.id = 'sample')
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = by_chappell, values_from = c('count', 'proportion')) |>
mutate(count_TRUE = ifelse(is.na(count_TRUE), 0, count_TRUE),
proportion_TRUE = ifelse(is.na(proportion_TRUE), 0, proportion_TRUE))
lapply(sample_sizes, function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = by_chappell, values_from = c('count', 'proportion')) |>
mutate(count_TRUE = ifelse(is.na(count_TRUE), 0, count_TRUE),
proportion_TRUE = ifelse(is.na(proportion_TRUE), 0, proportion_TRUE))
}) |>
bind_rows(.id = 'sample')
lapply(sample_sizes, function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = by_chappell, values_from = c('count', 'proportion'))
# |>
#   mutate(count_TRUE = ifelse(is.na(count_TRUE), 0, count_TRUE),
#          proportion_TRUE = ifelse(is.na(proportion_TRUE), 0, proportion_TRUE))
}) |>
bind_rows(.id = 'sample')
lapply(sample_sizes, function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = by_chappell, values_from = c('count', 'proportion'))
# |>
#   mutate(count_TRUE = ifelse(is.na(count_TRUE), 0, count_TRUE),
#          proportion_TRUE = ifelse(is.na(proportion_TRUE), 0, proportion_TRUE))
}) |>
bind_rows(.id = 'sample') |>
colnames()
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = by_chappell, values_from = c('count', 'proportion')) |>
mutate(count_TRUE = ifelse(is.na(count_TRUE), 0, count_TRUE),
proportion_TRUE = ifelse(is.na(proportion_TRUE), 0, proportion_TRUE))
lapply(sample_sizes, function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = by_chappell, values_from = c('count', 'proportion')) |>
mutate(count_TRUE = ifelse(is.na(count_TRUE), 0, count_TRUE),
proportion_TRUE = ifelse(is.na(proportion_TRUE), 0, proportion_TRUE))
}) |>
bind_rows(.id = 'sample')
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = 'by_chappell',
values_from = c('count', 'proportion')) |>
mutate(count_TRUE = ifelse(is.na(count_TRUE), 0, count_TRUE),
proportion_TRUE = ifelse(is.na(proportion_TRUE), 0, proportion_TRUE))
lapply(sample_sizes, function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = 'by_chappell',
values_from = c('count', 'proportion')) |>
mutate(count_TRUE = ifelse(is.na(count_TRUE), 0, count_TRUE),
proportion_TRUE = ifelse(is.na(proportion_TRUE), 0, proportion_TRUE))
}) |>
bind_rows(.id = 'sample')
lapply(sample_sizes, function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = 'by_chappell',
values_from = c('count', 'proportion'))
}) |>
bind_rows(.id = 'sample')
lapply(sample_sizes, function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = 'by_chappell',
values_from = c('count', 'proportion'))
}) |>
bind_rows(.id = 'sample') |>
mutate(across(where(is.numeric), \(x) ifelse(is.na(x), 0, x)))
lapply(sample_sizes, function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = 'by_chappell',
values_from = c('count', 'proportion'))
}) |>
bind_rows(.id = 'sample') |>
mutate(across(where(is.numeric), \(x) ifelse(is.na(x), 0, x)),
sample_size = as.numeric(sample)) |>
ggplot(aes(x = sample_size, y = count_TRUE)) +
geom_line()
lapply(sample_sizes, function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = 'by_chappell',
values_from = c('count', 'proportion'))
}) |>
bind_rows(.id = 'sample') |>
mutate(across(where(is.numeric), \(x) ifelse(is.na(x), 0, x)),
sample_size = as.numeric(sample)) |>
ggplot(aes(x = sample_size, y = count_TRUE)) +
geom_point(size = 3, alpha = 0.5) +
geom_line(linewidth = 1)
sample_sizes <- seq(1, 1000, by = 1)
lapply(sample_sizes, function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = 'by_chappell',
values_from = c('count', 'proportion'))
}) |>
bind_rows(.id = 'sample') |>
mutate(across(where(is.numeric), \(x) ifelse(is.na(x), 0, x)),
sample_size = as.numeric(sample)) |>
ggplot(aes(x = sample_size, y = count_TRUE)) +
geom_point(size = 3, alpha = 0.5) +
geom_line(linewidth = 1)
sample_df |>
ggplot(aes(x = sample_size, y = proportion_TRUE)) +
geom_point(size = 3, alpha = 0.5) +
geom_line(linewidth = 1)
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = 'by_chappell',
values_from = c('count', 'proportion'))
sample_df <- lapply(sample_sizes, function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = 'by_chappell',
values_from = c('count', 'proportion'))
}) |>
bind_rows(.id = 'sample') |>
mutate(across(where(is.numeric), \(x) ifelse(is.na(x), 0, x)),
sample_size = as.numeric(sample))
sample_df |>
ggplot(aes(x = sample_size, y = proportion_TRUE)) +
geom_point(size = 3, alpha = 0.5) +
geom_line(linewidth = 1)
set.seed(123)
sample_sizes <- seq(1, 200, by = 1)
sample_df <- lapply(sample_sizes, function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(count = n(),
proportion = n() / x,
.by = 'by_chappell') |>
pivot_wider(names_from = 'by_chappell',
values_from = c('count', 'proportion'))
}) |>
bind_rows(.id = 'sample') |>
mutate(across(where(is.numeric), \(x) ifelse(is.na(x), 0, x)),
sample_size = as.numeric(sample))
sample_df |>
ggplot(aes(x = sample_size, y = proportion_TRUE)) +
geom_point(size = 3, alpha = 0.5) +
geom_line(linewidth = 1)
sample_df |>
ggplot(aes(x = sample_size, y = proportion_TRUE)) +
geom_point(size = 3, alpha = 0.5) +
geom_line(linewidth = 1) +
labs(x = '# of Songs Listened To',
y = 'Proportion of Songs by Chappell Roan',
title = 'Proportion of Songs by Chappell Roan by Number of Songs Heard')
repeat_df <- lapply(rep(10, 6), function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F))
}) |>
bind_rows(.id = 'sample')
View(repeat_df)
repeat_df <- lapply(rep(10, 6), function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']])
}) |>
bind_rows(.id = 'sample')
repeat_df <- lapply(rep(10, 6), function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']],
song = seq(1, 10))
}) |>
bind_rows(.id = 'sample') |>
mutate(col = ifelse(artists %in% songs_summary$artists,
artists, 'Other')) |>
ggplot(aes(x = song, y = sample, color = col)) +
geom_point(size = 5, alpha = 0.5)
repeat_df <- lapply(rep(10, 6), function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']],
song = seq(1, 10))
}) |>
bind_rows(.id = 'sample') |>
mutate(col = ifelse(artists %in% songs_summary$artists,
artists, 'Other')) |>
ggplot(aes(x = song, y = sample, color = col)) +
geom_point(size = 5, alpha = 0.5)
repeat_df <- lapply(rep(10, 6), function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']],
song = seq(1, 10))
}) |>
bind_rows(.id = 'sample') |>
mutate(col = ifelse(artists %in% songs_summary$artists,
artists, 'Other'))
set.seed(123)
repeat_df <- lapply(rep(10, 6), function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']],
song = seq(1, 10))
}) |>
bind_rows(.id = 'sample') |>
mutate(col = ifelse(artists %in% songs_summary$artists,
artists, 'Other'))
repeat_df |>
ggplot(aes(x = song, y = sample, color = col)) +
geom_point(size = 5, alpha = 0.5)
repeat_df |>
filter(artist != 'Other') |>
ggplot(aes(x = song, y = sample, color = col)) +
geom_point(size = 5, alpha = 0.5)
repeat_df |>
filter(artists != 'Other') |>
ggplot(aes(x = song, y = sample, color = col)) +
geom_point(size = 5, alpha = 0.5)
repeat_df |>
filter(col != 'Other') |>
ggplot(aes(x = song, y = sample, color = col)) +
geom_point(size = 5, alpha = 0.5)
repeat_df <- lapply(rep(10, 6), function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']],
song = seq(1, 10))
}) |>
bind_rows(.id = 'sample') |>
mutate(col = ifelse(artists %in% songs_summary$artists,
artists, 'Other')) |>
filter(artists != 'Other') |>
summarize(n = n(),
.by = 'artists')
repeat_df <- lapply(rep(10, 6), function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']],
song = seq(1, 10))
}) |>
bind_rows(.id = 'sample') |>
mutate(col = ifelse(artists %in% songs_summary$artists,
artists, 'Other')) |>
filter(artists != 'Other') |>
summarize(n = n(),
.by = c('sample', 'artists'))
repeat_df <- lapply(rep(10, 6), function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']],
song = seq(1, 10))
}) |>
bind_rows(.id = 'sample') |>
mutate(col = ifelse(artists %in% songs_summary$artists,
artists, 'Other')) |>
filter(col != 'Other') |>
summarize(n = n(),
.by = c('sample', 'artists'))
repeat_df <- lapply(rep(10, 6), function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']],
song = seq(1, 10))
}) |>
bind_rows(.id = 'sample') |>
mutate(col = ifelse(artists %in% songs_summary$artists,
artists, 'Other')) |>
filter(col != 'Other') |>
summarize(n = n(),
.by = c('sample', 'artists')) |>
filter(n > 1)
repeat_df |>
ggplot(aes(x = n, y = sample,
group = col, color = col)) +
geom_col(position = position_dodge2())
repeat_df <- lapply(rep(10, 6), function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']],
song = seq(1, 10))
}) |>
bind_rows(.id = 'sample') |>
mutate(col = ifelse(artists %in% songs_summary$artists,
artists, 'Other')) |>
filter(col != 'Other') |>
summarize(n = n(),
.by = c('sample', 'col'))
repeat_df |>
ggplot(aes(x = n, y = sample,
group = col, color = col)) +
geom_col(position = position_dodge2())
repeat_df |>
ggplot(aes(x = n, y = sample,
group = col, fill = col)) +
geom_col(position = position_dodge2())
repeat_df |>
filter(n > 1) |>
ggplot(aes(x = n, y = sample,
group = col, fill = col)) +
geom_col(position = position_dodge2())
repeat_df <- lapply(rep(10, 6), function(x) {
df <- data.frame(artists = songs[sample(1:nrow(songs),
x, replace = T), ][['artists']],
song = seq(1, 10))
}) |>
bind_rows(.id = 'sample') |>
mutate(col = ifelse(artists %in% songs_summary$artists,
artists, 'Other')) |>
summarize(n = n(),
.by = c('sample', 'col'))
ggplot(aes(x = n, y = col, fill = col)) +
geom_col() +
facet_grid(rows = vars(sample))
repeat_df |>
ggplot(aes(x = n, y = col, fill = col)) +
geom_col() +
facet_grid(rows = vars(sample))
repeat_df |>
ggplot(aes(x = n, y = col, fill = col)) +
geom_col() +
facet_grid(rows = vars(sample), scales = 'free', space = 'free')
repeat_df |>
ggplot(aes(x = n, y = col, fill = col)) +
geom_col() +
facet_grid(rows = vars(sample), scales = 'free', space = 'free') +
labs(x = 'Number of Songs', y = 'Artist',
title = 'Number of Songs by Artist in 10 Plays',
subtitle = 'n = 6')
songs_summary |>
mutate(prop = n / 50) |>
ggplot(aes(x = reorder(artists, prop),
y = prop, fill = artists)) +
geom_col() +
guides(fill = 'none') +
labs(x = 'Artist', y = 'Proportion',
title = 'Proportion of Songs by Artist on Taylor Swift Radio'
subtitle = 'n = 50')
songs_summary |>
mutate(prop = n / 50) |>
ggplot(aes(x = reorder(artists, prop),
y = prop, fill = artists)) +
geom_col() +
guides(fill = 'none') +
labs(x = 'Artist', y = 'Proportion',
title = 'Proportion of Songs by Artist on Taylor Swift Radio',
subtitle = 'n = 50')
songs_summary |>
mutate(artists = str_replace_all(artists,
c(', ' = ',\n',
'Del Rey' = '\nDel Rey',
'Chappell Roan' = 'Chappell\nRoan',
'Meghan Trainor' = 'Meghan\nTrainor'))) |>
mutate(prop = n / 50) |>
ggplot(aes(x = reorder(artists, prop),
y = prop, fill = artists)) +
geom_col() +
guides(fill = 'none') +
labs(x = 'Artist', y = 'Proportion',
title = 'Proportion of Songs by Artist on Taylor Swift Radio',
subtitle = 'n = 50')
data.frame(artists = songs[sample(1:nrow(songs),
n_samples, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(n = n(),
proportion = n() / n_samples,
.by = 'by_chappell') |>
ggplot(aes(x = proportion, y = by_chappell)) +
geom_col(fill = 'steelblue', col = 'white') +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
labs(x = 'Proportion of Heard Songs by Chappell Roan',
y = 'Was the song by Chappell Roan?',
title = 'Proportion of Songs by Chappell Roan on the\n"Taylor Swift Radio" Spotify Playlist',
subtitle = paste('Number of songs listened to: n =', n_samples))
data.frame(artists = songs[sample(1:nrow(songs),
n_samples, replace = T), ][['artists']]) |>
mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
summarize(n = n(),
proportion = n() / n_samples,
.by = 'by_chappell') |>
ggplot(aes(x = proportion, y = by_chappell)) +
geom_col(fill = 'steelblue', col = 'black') +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
labs(x = 'Proportion of Heard Songs by Chappell Roan',
y = 'Was the song by Chappell Roan?',
title = 'Proportion of Songs by Chappell Roan on the\n"Taylor Swift Radio" Spotify Playlist',
subtitle = paste('Number of songs listened to: n =', n_samples))
sample_df |>
ggplot(aes(x = sample_size, y = proportion_TRUE)) +
geom_point(size = 3, alpha = 0.5, col = 'steelblue') +
geom_line(linewidth = 1, col = 'steelblue') +
labs(x = '# of Songs Listened To',
y = 'Proportion of Songs by Chappell Roan',
title = 'Proportion of Songs by Chappell Roan by Number of Songs Heard')
library(janitor)
library(datasets)
library(patchwork)
library(GGally)
library(mosaic)
library(kableExtra)
library(tidyverse)
theme_set(theme_bw())
