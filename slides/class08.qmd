---
title: "Class 08"
subtitle: "DATA1220-55, Fall 2024"
author: "Sarah E. Grabinski"
date: '2024-09-16'
format:
  revealjs: 
    theme: default
    self-contained: true
    slide-number: true
    footnotes-hover: true
    echo: false
    preview-links: auto
    fig-align: center
    footer: "DATA1220-55 Fall 2024, Class 08 | Updated: {{< meta date >}} |  [Canvas](https://canvas.jcu.edu/courses/36290) | [Campuswire](https://campuswire.com/c/G6427C531/feed)"
  beamer:
    header-includes: 
      - \newcommand{\theHtable}{\thetable}
    echo: false
    slide-number: true
    navigation: horizontal
    theme: default
    self-contained: true
    preview-links: auto
    fig-align: center
    footer: "DATA1220-55 Fall 2024, Class 08 | Updated: {{< meta date >}} |  [Canvas](https://canvas.jcu.edu/courses/36290) | [Campuswire](https://campuswire.com/c/G6427C531/feed)"
---

```{r}
library(janitor)
library(lubridate)
library(ggdist)
library(patchwork)
library(kableExtra)
library(readxl)
library(tidyverse)

theme_set(theme_bw())

songs <- read_xlsx('./class08/Taylor Swift Radio.xlsx')

songs_summary <- songs |>
  group_by(artists) |>
  mutate(n = n(), 
         artists = ifelse(n > 1 | str_detect(artists, 'Charli xcx'), 
                          artists, 'Other')) |>
  ungroup() |>
  summarize(n = n(), 
            .by = 'artists')

reputation <- read_csv('./class08/reputation-09-16-2024.csv')

survey1 <- read_csv('./class08/DATA1220-55 Fall 2024 Introductory Survey (Responses Cleaned) - Form Responses 1.csv') |>
  separate(timestamp, c('date', 'time'), remove = F, sep = ' ') |>
  separate(date, c('month', 'day', 'year'), sep = '\\/') |>
  mutate(date = paste(year, 
                      str_pad(month, width = 2, side = 'left', pad = '0'),
                      str_pad(day, width = 2, side = 'left', pad = '0'), 
                      sep = '-')) |>
  mutate(timestamp2 = paste(date, time), 
         major_full = str_split(major_full, ', '), 
         why = str_split(why, ', '), 
         learn = str_split(learn, ', '),
         concerns = str_split(concerns, ', '), 
         software = str_split(software, ', '), 
         favorite_class = str_split(favorite_class, ', '),
         help = str_split(help, ', '),
         anything_else = str_split(anything_else, ', '))
```

## Campuswire Discussion Post

-   Read Section 2.2.5 in your [OpenIntro Statistics text book](https://canvas.jcu.edu/files/3669904/download?download_frd=1)

-   Read this [opinion piece](https://www.ataccama.com/blog/why-pie-charts-are-evil) on the use of pie charts to visualize proportions

-   Answer the [question on Campuswire](https://campuswire.com/c/G6427C531/feed/19) for additional participation points

-   It will not be available after Friday 9/20/24

## Example: Bar Plot of the Count of Students by Reputation Level

```{r}
reputation |>
  mutate(rep_level = ifelse(rep_level == 0, 
                            'Level 0: Noob', 
                            'Level 1: Starter'), 
         rep_level = fct_relevel(rep_level, 'Level 0: Noob')) |>
  ggplot(aes(x = rep_level)) +
  geom_bar(fill = 'steelblue', alpha = 0.75, col = 'black') +
  scale_y_continuous(breaks = seq(0, 30, by = 5)) +
  labs(x = 'Reputation Level', 
       y = 'Count of Students', 
       title = 'Bar plot of the number of students by reputation level achieved', 
       subtitle = 'Reputation standings current as of 9/16/24', 
       caption = 'Sample size n = 29')
```

## Example: Histogram of Reputation Points

```{r}
reputation |>
  ggplot(aes(x = rep_points)) +
  geom_histogram(binwidth = 25, fill = 'steelblue', col = 'white')  +
  scale_y_continuous(breaks = seq(0, 8, by = 1)) +
  labs(x = 'Reputation Points', 
       y = 'Count of Students', 
       title = 'Histogram of the number of students by reputation points', 
       subtitle = 'Reputation standings current as of 9/16/24', 
       caption = 'Sample size n = 29')
```

## Example: Rain Cloud Plot of Reputation Points

```{r}
reputation |>
  ggplot(aes(x = rep_points, y = '')) +
  ggdist::stat_halfeye(fill = 'steelblue', alpha = 0.75) +
  ggdist::stat_dots(side = 'left', 
                    alpha = 0.75, 
                    fill = 'steelblue', 
                    binwidth = 1, 
                    dotsize = 3) +
  theme(axis.ticks.y = element_blank(), 
        axis.text.y = element_blank()) +
  scale_x_continuous(breaks = seq(0, 150, by = 10)) +
  labs(x = 'Reputation Points', 
       y = '', 
       title = 'Rain Cloud Plot of Reputation Point Distribution', 
       subtitle = 'Reputation standings current as of 9/16/24', 
       caption = 'Sample size n = 29')
```

## Example: Boxplot of Median vs Mean in Reputation Points

```{r}
reputation |>
  ggplot(aes(x = rep_points, y = '')) +
  geom_boxplot(fill = 'steelblue', alpha = 0.75, linewidth = 1) +
  stat_summary(fun = mean, shape = 23, fill = 'orange', size = 1) +
  theme(axis.ticks.y = element_blank(), 
        axis.text.y = element_blank()) +
  scale_x_continuous(breaks = seq(0, 150, by = 10)) +
  labs(x = 'Reputation Points', 
       y = '', 
       title = 'Boxplot of Reputation Point Distribution', 
       subtitle = 'Reputation standings current as of 9/16/24', 
       caption = 'Sample size n = 29; Orange point = sample mean')
```

## Homework 2 Due Friday 9/20/24 by 6:00 PM {.smaller}

-   [Instructions](https://canvas.jcu.edu/files/3708401/download?download_frd=1) (`homework2_instructions.pdf`), a [Quarto markdown template](https://canvas.jcu.edu/files/3708307/download?download_frd=1) (`homework2_template.qmd`), and an [example HTML output](https://canvas.jcu.edu/files/3708306/download?download_frd=1) (`homework2_example.html`) are available for download under Chapter 2 on the [Modules](https://canvas.jcu.edu/courses/36290/modules) page in Canvas.

-   Upload **TWO** (2) documents to [Homework 2](https://canvas.jcu.edu/courses/36290/assignments/451733) on the [Assignments](https://canvas.jcu.edu/courses/36290/assignments) page in Canvas by **Friday 9/20/2024** by **6:00pm**: `homework2_yourlastname.qmd` and `homework2_yourlastname.html`

-   [Video walk-through](https://canvas.jcu.edu/files/3708369/download?download_frd=1) of Homework 2 under Tutorials on the [Modules](https://canvas.jcu.edu/courses/36290/modules) page in Canvas. Make sure you're caught up on the [video walk-through of homework 1](https://canvas.jcu.edu/files/3695568/download?download_frd=1).

## Homework 1 Learnings (part I) {.smaller}

You now have experience making professional-looking HTML documents that embed statistical programming and data visualizations into traditional text.

-   You started a project in RStudio

-   You transferred files from your Downloads folder to your project folder

-   You edited a Quarto Markdown Document (i.e. QMD, a file ending in `.qmd`)

-   You rendered your Quarto Markdown Document into an HTML file (i.e. a file ending in `.html`).

## Homework 1 Learnings (part II)

You have done basic statistical analysis.

-   You loaded data into a project's environment in RStudio

-   You inspected that data to determine the data type of the variables

-   You created a codebook describing the variable

-   You analyzed the relationship between 2 numerical variables

-   You communicated your findings about that relationship

## Homework 2 Objectives

-   Effectively describe numerical distributions

-   Select the appropriate summary statistics based on distribution shape

-   Match numerical distributions to their summary statistics

-   Calculate proportions from a contingency table

## Late Policy

"This homework is due by 6:00pm on Friday, 9/20/24. No credit will be lost for assignments received by 7:00pm to account for issues with uploading. 10% of the points will be deducted from assignments received by 9:00am on Saturday, 9/21/24. Assignments turned in after this point are only eligible for 50% credit, so it benefits you to turn in whatever you have completed by the due date."

## How can I get help with homework? {.smaller}

-   **Read the [textbook](https://canvas.jcu.edu/files/3669904/download?download_frd=1).** Many of you are asking for additional examples. Luckily, there are tons we didn't go over in the textbook.

-   **Look at the [homework](https://canvas.jcu.edu/courses/36290/assignments/451733) early**. Only 1 person has looked at the homework since I posted it. Make sure you leave enough time to get help if you need it.

-   **Ask a question on our [Campuswire class feed](https://campuswire.com/c/G6427C531/feed).** I'm only one person, and I may not be able to give you a prompt answer. However, the 20+ other people in the class might be able to.

-   **Come to office hours.** I will be available after class today (Monday 9/23/2024) and Wednesday 9/25/2024 from 2:30pm - 4:00pm. If you cannot make it, reach out to me to try and schedule an appointment.

## Last Time...

-   Contingency tables: counts and proportions (frequencies)

-   Visualizing frequencies: bar plots, mosaic plots

-   Describing numerical relationships: linear vs nonlinear, strong vs weak

-   Visualizing 3+ variables

## Today...

-   Review Survey 1 Results

-   Sarah's Objectives

-   Introduce Chapter 3 on Probability

## Survey 1 Results

```{r}
survey1 |>
  summarize(responses = n(), 
            response_rate = n() / 29) |>
  mutate(students = 29, 
         response_rate = scales::percent(response_rate, accuracy = 0.1)) |>
  select(responses, students, response_rate) |>
  kbl(col.names = c('# of Responses', '# of Students', 'Response Rate'), 
      align = 'c') |>
  kable_classic(full_width = F)
```

## Survey 1: Bar Plot of Surveys by Date

```{r}
survey1 |>
  ggplot(aes(x = date)) +
  geom_bar(fill = 'steelblue', col = 'white', alpha = 0.75) +
  labs(x = 'Date', y = 'Count of Surveys', 
       title = 'Number of Surveys Completed by Date in DATA1220-55', 
       subtitle = 'Responses received from 27 of 29 Students')
```

## Survey 1: Contingency Table of Graduation Year by Personal Pronouns (Counts)

```{r}
survey1 |>
  filter(!is.na(pronouns), !is.na(graduation_year)) |>
  tabyl(pronouns, graduation_year) |>
  adorn_totals(where = c('row', 'col')) |>
  kbl(caption = 'Count of Students by Graduation Year and Personal Pronouns')
```

## Survey 1: Contingency Table of Graduation Year and Personal Pronouns (Proportions by Row)

```{r}
survey1 |>
  filter(!is.na(pronouns), !is.na(graduation_year)) |>
  tabyl(pronouns, graduation_year) |>
  adorn_totals(where = c('row', 'col')) |>
  adorn_percentages(denominator = 'row') |>
  mutate(across(where(is.numeric), \(x) scales::percent(x, accuracy = 0.1))) |>
  kbl(caption = 'Proportion of Graduation Years Among Students with He/Him and She/Her Pronouns (n = 25)') |>
  kable_classic(full_width = F)
```

## Survey 1: Contingency Table of Graduation Year by Personal Pronouns (Proportions by Column)

```{r}
survey1 |>
  filter(!is.na(pronouns), !is.na(graduation_year)) |>
  tabyl(pronouns, graduation_year) |>
  adorn_totals(where = c('row', 'col')) |>
  adorn_percentages(denominator = 'col') |>
  mutate(across(where(is.numeric), \(x) scales::percent(x, accuracy = 0.1))) |>
  kbl(caption = 'Proportion of He/Him and She/Her Pronouns Among Students from Each Graduation Year (n = 25)') |>
  kable_classic(full_width = F)
```

## Survey 1: Majors

```{r}
data.frame(major = unlist(survey1$major_full)) |>
  summarize(n = n(), 
            .by = 'major') |>
  arrange(desc(n)) |>
  ggplot(aes(x = n, y = reorder(major, n), fill = major)) +
  geom_col() +
  guides(fill = 'none') +
  labs(x = 'Count of Students', y = 'Major', 
       title = 'Count of Students by Major', 
       caption = 'n = 27')
```

## Survey 1: Bar Plot of Motivations for Class

```{r}
data.frame(why = unlist(survey1$why)) |>
  summarize(n = n(), 
            .by = 'why') |>
  arrange(desc(n)) |>
  ggplot(aes(x = n, y = reorder(why, n), fill = why)) +
  geom_col() +
  guides(fill = 'none') +
  labs(x = 'Count of Students', y = 'Reason for Taking the Class', 
       title = 'Count of Students by Reason for Taking the Class', 
       caption = 'n = 27') +
  scale_x_continuous(breaks = seq(0, 10, by = 1))
```

## Survey 1: Bar Plot of What you Hope to Learn

```{r}
data.frame(learn = unlist(survey1$learn)) |>
  summarize(n = n(), 
            .by = 'learn') |>
  arrange(desc(n)) |>
  ggplot(aes(x = n, y = reorder(learn, n), fill = learn)) +
  geom_col() +
  guides(fill = 'none') +
  labs(x = 'Count of Students', y = 'What You Hope to Learn', 
       title = 'Count of Students by What They Hope to Learn', 
       caption = 'n = 27') +
  scale_x_continuous(breaks = seq(0, 10, by = 1))
```

## Survey 1: Contingency Table of Level of Excitement and Coding Experience (Counts)

```{r}
survey1 |>
  tabyl(excited, coding) |>
  adorn_totals(where = c('row', 'col')) |>
  kbl(align = 'c') |>
  kable_classic(full_width = F)
```

## Survey 1: Contingency Table of Level of Excitement and Coding Experience (With Binning)

```{r}
survey1 |>
  mutate(
    excited = as.character(excited),
    coding = as.character(coding),
    excited = fct_collapse(excited, '5+' = c('5', '6')), 
         coding = fct_collapse(coding, '2+' = c('2', '3', '4'))) |>
  tabyl(excited, coding) |>
  adorn_totals(where = c('row', 'col')) |>
  kbl(align = 'c') |>
  kable_classic(full_width = F)
```

## Survey 1: Mosaic Plot of Level of Excitement and Coding Experience

```{r}
mosaic_array <- survey1 |>
  mutate(
    excited = as.character(excited),
    coding = as.character(coding),
    excited = fct_collapse(excited, '5+' = c('5', '6')), 
         coding = fct_collapse(coding, '2+' = c('2', '3', '4'))) |>
  tabyl(excited, coding) |>
  column_to_rownames('excited') |>
  as.matrix()

dimnames(mosaic_array) <- list(
  'Excitement About Class' = c('1', '2', '3', '4', '5+'), 
  'Prior Coding Experience' = c('1', '2+')
)

vcd::mosaic(mosaic_array, shade = T, 
            main = 'Mosaic Plot of Excitement About Class\nby Prior Coding Experience')
```

## Survey 1: Bar Plot of Data Analysis Software Experience

```{r}
data.frame(software = unlist(survey1$software)) |>
  summarize(n = n(), 
            .by = 'software') |>
  arrange(desc(n)) |>
  ggplot(aes(x = n, y = reorder(software, n), fill = software)) +
  geom_col() +
  guides(fill = 'none') +
  labs(x = 'Count of Students', y = 'Software Experience', 
       title = 'Count of Students by Software Experience', 
       caption = 'n = 27') +
  scale_x_continuous(breaks = seq(0, 20, by = 1))
```

## Survey 1: Bar Plot of Concerns about Class

```{r}
data.frame(concerns = unlist(survey1$concerns)) |>
  summarize(n = n(), 
            .by = 'concerns') |>
  arrange(desc(n)) |>
  ggplot(aes(x = n, y = reorder(concerns, n), fill = concerns)) +
  geom_col() +
  guides(fill = 'none') +
  labs(x = 'Count of Students', y = 'Concerns Regarding Class', 
       title = 'Count of Students by Concern Regarding Class', 
       caption = 'n = 27') +
  scale_x_continuous(breaks = seq(0, 20, by = 1))
```

## Survey 1: Bar Plot of Favorite Class Features

```{r}
data.frame(favorite_class = unlist(survey1$favorite_class)) |>
  summarize(n = n(), 
            .by = 'favorite_class') |>
  arrange(desc(n)) |>
  ggplot(aes(x = n, y = reorder(favorite_class, n), fill = favorite_class)) +
  geom_col() +
  guides(fill = 'none') +
  labs(x = 'Count of Students', y = 'Favorite Class Features', 
       title = 'Count of Students by Favorite Class Feature', 
       caption = 'n = 27') +
  scale_x_continuous(breaks = seq(0, 20, by = 1))
```

## Survey 1: Bar Plot of How I Can Help

```{r}
data.frame(help = unlist(survey1$help)) |>
  summarize(n = n(), 
            .by = 'help') |>
  arrange(desc(n)) |>
  ggplot(aes(x = n, y = reorder(help, n), fill = help)) +
  geom_col() +
  guides(fill = 'none') +
  labs(x = 'Count of Students', y = 'Ways I Can Help', 
       title = 'Count of Students by Way I Can Help You Be Successful', 
       caption = 'n = 27') +
  scale_x_continuous(breaks = seq(0, 20, by = 1))
```

## Survey 1: Bar Plot of "Anything Else?" Answers

```{r}
data.frame(anything_else = unlist(survey1$anything_else)) |>
  summarize(n = n(), 
            .by = 'anything_else') |>
  arrange(desc(n)) |>
  ggplot(aes(x = n, y = reorder(anything_else, n), fill = anything_else)) +
  geom_col() +
  guides(fill = 'none') +
  labs(x = 'Count of Students', y = '"Anything Else?" Answer', 
       title = 'Count of Students by "Anything Else?" Answer', 
       caption = 'n = 27') +
  scale_x_continuous(breaks = seq(0, 20, by = 1))
```

## Sarah's Objectives

-   ***Be available.*** I will check in with our next survey about office hour times.

-   Provide ***real world examples*** and ***practice problems***.

-   Help with ***coding*** and make ***how-to videos.***

-   ***Be patient*** and give ***thorough explanations.***

## Sarah's Other Objectives

-   ***Be a good teacher.*** Unclear how.

-   ***Get students to like statistics.*** Trying!

-   Be ***fun***, ***helpful***, ***passionate***, and ***engaging.***

-   Promote ***good vibes***. I need your help!

## Your Objectives

Many people remarked that their favorite class was their favorite because of the people in it, who were engaged, had fun, and participated.

-   Come prepared

-   Ask and answer questions in class

-   Ask and answer questions on Campuswire

-   Don't be afraid to make mistakes

## Chapter 3 Objectives

-   Define probability, random processes, and the law of large numbers

-   Describe the sample space for disjoint and non-disjoint outcomes

-   Calculate probabilities using the General Addition and Multiplication Rules

-   Create a probability distribution for disjoint outcomes

## Defining Probability

What does the word **probability** mean to you?

. . .

"Highly likely"

. . .

"Probably"

. . .

"About even"

. . .

"Almost no chance"

## People interpret probability differently

![Did your estimate fall within these ranges? Are these ranges reasonable?](https://github.com/sarah-grabinski/data1220-55_fall2024/blob/main/slides/class08/perceptions-of-probability.PNG?raw=true){fig-align="center"}

## So what is probability?

::: callout-note
## Frequentist Definition

The proportion of times that a particular outcome would occur if we observed a random process an infinite number of times.
:::

-   A **random process** is one where you know which outcomes are possible (i.e. the **sample space**) but you don't know which outcome comes next

-   Examples of a **random process**: coin toss, die roll, stock market

## How do you know a process is random?

![Both Apple and Spotify took steps to make their "shuffle" features less random after complaints from users.](https://github.com/sarah-grabinski/data1220-55_fall2024/blob/main/slides/class08/shuffle.png?raw=true){fig-align="center"}

## A brief history of "Shuffle"

-   January 11, 2005 – Apple releases the iPod Shuffle, a small device capable only of playing music randomly

    -   September 7, 2005 – Apple offers "Smart Shuffle" in response to complaints, which controlled how likely songs from the same album or artist would play close together

-   July 2011 – Spotify launches in the United States using the [Fisher-Yates Algorithm](https://engineering.atspotify.com/2014/02/28/how-to-shuffle-songs/), which is like picking tickets out of a hat until no more remain

    -   February 2014 – Spotify modifies their sampling algorithm to ensure an even distribution across albums/artists

## What went wrong?

-   The human brain is good at finding patterns in noise, even when there are none

-   If an artist is repeated "too soon", the listener doesn't feel the order is random

-   We perceive a "random" distribution as also being "uniform" and "fair"

## So why didn't we like a "true" random shuffle?

-   Songs not evenly distributed across albums and artists on a playlist

    -   Some albums/artists may play more often than others because they have more songs

    -   Artists/albums with more songs also more likely to play sequentially

-   A true random shuffle might play the same artist multiple times in a row

    -   It's unusual but not impossible to roll a 1 on a die 6 times in a row

## Example: Spotify Playlists

```{r}
songs_summary |> 
  mutate(artists = str_replace_all(artists, 
                                   c(', ' = ',\n', 
                                     'Del Rey' = '\nDel Rey',
                                     'Chappell Roan' = 'Chappell\nRoan', 
                                     'Meghan Trainor' = 'Meghan\nTrainor'))) |>
  ggplot(aes(x = reorder(artists, n), 
             y = n, fill = artists)) +
  geom_col() +
  guides(fill = 'none') +
  labs(title = "Number of Songs on the 'Taylor Swift Radio' playlist on Spotify by Artist",
       subtitle = 'Total artists = 26', 
       x = 'Artist', y = 'Count of Songs on Playlist')
```

## What if shuffle was truly random?

Each time the song changes, every song on the playlist is eligible to be played next

-   Does not matter if the song was just played

-   Does not matter who the artist is

We call this ***sampling with replacement***.

-   Like drawing a playing card, looking at it, then putting it back in the deck before the next draw.

-   Repetition of outcomes is possible.

## How often were artists repeated during Spotify's original shuffle?

```{r}
set.seed(123)

repeat_df <- lapply(rep(10, 6), function(x) {
  df <- data.frame(artists = songs[sample(1:nrow(songs), 
                                  x, replace = T), ][['artists']], 
                   song = seq(1, 10))
}) |>
  bind_rows(.id = 'sample') |>
  mutate(col = ifelse(artists %in% songs_summary$artists, 
                      artists, 'Other')) |>
  summarize(n = n(), 
            .by = c('sample', 'col'))

repeat_df |>
  ggplot(aes(x = n, y = col, fill = col)) +
  geom_col() +
  facet_grid(rows = vars(sample), scales = 'free', space = 'free') +
  labs(x = 'Number of Songs', y = 'Artist', 
       title = 'Number of Songs by Artist in 10 Plays', 
       subtitle = 'n = 6')
```

## What is the probability of hearing a song by Chappell Roan?

-   There is our "observed" probability that the next song is by Chappell Roan

    -   Sample proportion ($\hat{p}_n$)

-   There is some "true" real-world probability that the next song is by Chappell Roan

    -   Population proportion ($p$)

## Defining the sample space

The **sample space** is the total collection of possible outcomes for a **random process**.

-   Die rolls: 1, 2, 3, 4, 5, 6

-   Coin flips: heads, tails

-   Stock market: up, down, no change

Here, the **sample space** is the songs on the playlist (n = 50) and the artists who perform them (n = 26).

## Calculating probabilities

-   Probabilities are proportions, or the number of observations with a particular value divided by the total number of observations ($n$).

-   Proportions range from 0 (no observations in data) to 1 (all observations in data)

-   Also may be a percentage, ranging from 0% to 100% (multiply proportion by 100)

## Proportion of Songs by Artist

```{r}
songs_summary |>
  mutate(artists = str_replace_all(artists, 
                                   c(', ' = ',\n', 
                                     'Del Rey' = '\nDel Rey',
                                     'Chappell Roan' = 'Chappell\nRoan', 
                                     'Meghan Trainor' = 'Meghan\nTrainor'))) |>
  mutate(prop = n / 50) |>
  ggplot(aes(x = reorder(artists, prop), 
             y = prop, fill = artists)) +
  geom_col() +
  guides(fill = 'none') +
  labs(x = 'Artist', y = 'Proportion', 
       title = 'Proportion of Songs by Artist on Taylor Swift Radio',
       subtitle = 'n = 50')
```

## Proportion of Chappell Roan songs

```{r}
songs_summary |>
  mutate(proportion = n / 50, 
         chappell_roan = ifelse(artists == 'Chappell Roan', 
                                T, F)) |>
  summarize(proportion = sum(proportion), 
            .by = 'chappell_roan') |>
  ggplot(aes(x = reorder(chappell_roan, proportion), 
             y = proportion, fill = chappell_roan)) +
  geom_col() +
  guides(fill = 'none') +
  scale_y_continuous(breaks = seq(0, 1, by = 0.1)) +
  labs(x = 'Song by Chappell Roan?', y = 'Proportion of Songs on Playlist', 
       title = 'Proportion of Songs by Chappell Roan on the\nTaylor Swift Radio Spotify Playlist')
```

## How well does the sample proportion represent the population proportion?

Should we listen to 1 song?

```{r}
set.seed(123)

n_samples <- 1

data.frame(artists = songs[sample(1:nrow(songs), 
                                  n_samples, replace = T), ][['artists']]) |>
  mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
  summarize(n = n(), 
            proportion = n() / n_samples,
            .by = 'by_chappell') |>
  ggplot(aes(x = proportion, y = by_chappell)) +
  geom_col(fill = 'steelblue', col = 'black') +
  scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
  labs(x = 'Proportion of Heard Songs by Chappell Roan', 
       y = 'Was the song by Chappell Roan?', 
       title = 'Proportion of Songs by Chappell Roan on the\n"Taylor Swift Radio" Spotify Playlist', 
       subtitle = paste('Number of songs listened to: n =', n_samples))
```

## How well does the sample proportion represent the population proportion?

Should we listen to 5 songs?

```{r}
set.seed(456)

n_samples <- 5

data.frame(artists = songs[sample(1:nrow(songs), 
                                  n_samples, replace = T), ][['artists']]) |>
  mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
  summarize(n = n(), 
            proportion = n() / n_samples, 
            .by = 'by_chappell') |>
  ggplot(aes(x = proportion, y = by_chappell)) +
  geom_col(fill = 'steelblue', col = 'black') +
  scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
  labs(x = 'Proportion of Heard Songs by Chappell Roan', 
       y = 'Was the song by Chappell Roan?', 
       title = 'Proportion of Songs by Chappell Roan on the\n"Taylor Swift Radio" Spotify Playlist', 
       subtitle = paste('Number of songs listened to: n =', n_samples))
```

## How well does the sample proportion represent the population proportion?

Should we listen to 10 songs?

```{r}
set.seed(789)

n_samples <- 10

data.frame(artists = songs[sample(1:nrow(songs), 
                                  n_samples, replace = T), ][['artists']]) |>
  mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
  summarize(n = n(), 
            proportion = n() / n_samples,
            .by = 'by_chappell') |>
  ggplot(aes(x = proportion, y = by_chappell)) +
  geom_col(fill = 'steelblue', col = 'black') +
  scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
  labs(x = 'Proportion of Heard Songs by Chappell Roan', 
       y = 'Was the song by Chappell Roan?', 
       title = 'Proportion of Songs by Chappell Roan on the\n"Taylor Swift Radio" Spotify Playlist', 
       subtitle = paste('Number of songs listened to: n =', n_samples))
```

## How well does the sample proportion represent the population proportion?

Should we listen to 100 songs?

```{r}
set.seed(123)

n_samples <- 100

data.frame(artists = songs[sample(1:nrow(songs), 
                                  n_samples, replace = T), ][['artists']]) |>
  mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
  summarize(n = n(), 
            proportion = n() / n_samples,  
            .by = 'by_chappell') |>
  ggplot(aes(x = proportion, y = by_chappell)) +
  geom_col(fill = 'steelblue', col = 'black') +
  scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
  labs(x = 'Proportion of Heard Songs by Chappell Roan', 
       y = 'Was the song by Chappell Roan?', 
       title = 'Proportion of Songs by Chappell Roan on the\n"Taylor Swift Radio" Spotify Playlist', 
       subtitle = paste('Number of songs listened to: n =', n_samples))
```

## How well does the sample proportion represent the population proportion?

Should we listen to 200 songs?

```{r}
set.seed(123)

n_samples <- 200

data.frame(artists = songs[sample(1:nrow(songs), 
                                  n_samples, replace = T), ][['artists']]) |>
  mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
  summarize(n = n(), 
            proportion = n() / n_samples,  
            .by = 'by_chappell') |>
  ggplot(aes(x = proportion, y = by_chappell)) +
  geom_col(fill = 'steelblue', col = 'black') +
  scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
  labs(x = 'Proportion of Heard Songs by Chappell Roan', 
       y = 'Was the song by Chappell Roan?', 
       title = 'Proportion of Songs by Chappell Roan on the\n"Taylor Swift Radio" Spotify Playlist', 
       subtitle = paste('Number of songs listened to: n =', n_samples))
```

## Law of Large Numbers

As more observations are collected, the sample proportion $\hat{p}_n$ of a particular outcome approaches the population proportion $p$ of that outcome.

```{r}
set.seed(123)

sample_sizes <- seq(1, 200, by = 1)

sample_df <- lapply(sample_sizes, function(x) {
  df <- data.frame(artists = songs[sample(1:nrow(songs), 
                                  x, replace = T), ][['artists']]) |>
  mutate(by_chappell = ifelse(artists == 'Chappell Roan', T, F)) |>
  summarize(count = n(), 
            proportion = n() / x,  
            .by = 'by_chappell') |>
  pivot_wider(names_from = 'by_chappell', 
              values_from = c('count', 'proportion'))
}) |>
  bind_rows(.id = 'sample') |>
  mutate(across(where(is.numeric), \(x) ifelse(is.na(x), 0, x)), 
         sample_size = as.numeric(sample))

sample_df |>
  ggplot(aes(x = sample_size, y = proportion_TRUE)) +
  geom_point(size = 3, alpha = 0.5, col = 'steelblue') +
  geom_line(linewidth = 1, col = 'steelblue') +
  labs(x = '# of Songs Listened To', 
       y = 'Proportion of Songs by Chappell Roan', 
       title = 'Proportion of Songs by Chappell Roan by Number of Songs Heard')
```

## Disjoint Outcomes

Outcomes are **disjoint** or **mutually exclusive** if they cannot both happen at the same time

-   The next song played cannot be by both Taylor Swift and Chappell Roan

**Non-disjoint** outcomes can occur at the same time.

-   The next song played could be by Charlie xcx OR Billie Eilish, because they collaborated on a song
